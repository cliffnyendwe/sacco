#!/usr/bin/env python
import os
import sys

import datetime

from os import path
from django.utils import timezone
import time

os.environ.setdefault("DJANGO_SETTINGS_MODULE", "circle.settings")

from django.core.management import execute_from_command_line

import django; django.setup()

from core_manager.models import IncomingPayments, User
from chama.models import ChamaMembership, ChamaContributions, Invoices
from utils.gcm_module import android_notification

from datetime import date, timedelta    
#import core.signals
from django.db.models import Q
from django.db.utils import IntegrityError
from django.core.mail import send_mail

def generate_incoice_date(last_invoice_date, payment_day):
    if not last_invoice_date:
        date_ = date.today()
        due_date = date(date_.year, date_.month, payment_day or 1)
    else:
        next_month = last_invoice_date + timedelta(days=31)
        due_date = date(next_month.year, next_month.month, payment_day or 1)
    
        delta = due_date - date.today()
        
        if delta.days > 5:
            return False
        else:
            return due_date
        
    return due_date

def generate_invoices():   
    
    memberships = ChamaMembership.objects.filter(chama_account__is_closed = False)
    
    for membership in memberships:
        due_date = generate_incoice_date(membership.last_invoice_date, membership.chama_account.payment_day)
        if due_date:
            invoice = Invoices(
                payer = membership.member,
                chama_account = membership.chama_account,
                amount_required = membership.chama_account.rotating_amount,
                due_date = due_date,
            )
            invoice.save()
            membership.last_invoice_date = due_date
            membership.save()
            
            notification_data = {
                'amount' : membership.chama_account.rotating_amount,
                'title' : "Payment Required",
                'message' : "Kindly pay Ksh. %s for your %s membership." %(membership.chama_account.rotating_amount, membership.chama_account.chama_name)
            }
            
            
            android_notification("new_invoice", membership.chama_account.id, membership.member, notification_data)
            
            if membership.member.email:
                email_message = """
Hi %s,

Kindly pay Ksh. %s for your %s membership.

Your mpesa account number is %s

Paybill no. is 179126

The due date for payment is %s.

Thanks!
                """ %(membership.member.first_name, membership.chama_account.rotating_amount, membership.chama_account.chama_name, membership.member.member_code, due_date)
                send_mail('Payment Required', email_message, 'micmukima@gmail.com', [membership.member.email], fail_silently=False)
    
if __name__ == '__main__':
    while True:
        try:
            generate_invoices()
        except Exception, e:
            print e
        finally:
            print "completed processing"
        time.sleep(30) 
    
